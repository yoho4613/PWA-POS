// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Shop {
  id          String @id @default(cuid())
  name        String
  address     String
  contact     String
  email       String
  logoKey     String
  tax         String
  cashBalance Int
  description String
}

model User {
  id        String        @id @default(uuid())
  name      String
  email     String        @unique
  password  String
  role      RoleEnumType? @default(staff)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  lastLogin DateTime      @default(now())
}

model Table {
  id             String @id @default(cuid())
  name           String
  location       String
  capacity       Int
  isParticipated String
  order          Int @unique @default(sequence())
}

model Cashup {
  id          String        @id @default(cuid())
  cash        Int
  card        Int
  other       Int
  createdAt   DateTime      @default(now())
  closedAt    DateTime?
  Transaction Transaction[]
}

model MenuItem {
  id          String   @id @unique @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  price       Float
  categories  String[]
  imageKey    String
  active      Boolean  @default(true)
  description String   @default("")
}

model Categories {
  id   String @id @unique @default(cuid())
  name String
}

model Transaction {
  id           Int    @id @unique @default(sequence())
  customerName String    @default("customer")
  people       Float
  payment      Payment[]
  subtotal     Int       @default(0)
  paid         Int       @default(0)
  order        Order[]
  table        String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  closedAt     DateTime?
  cashup       Cashup    @relation(fields: [cashupId], references: [id])
  cashupId     String
}

model Order {
  id            String       @id @unique @default(cuid())
  menuItem      String
  quantity      Float
  price         Float
  Transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId Int?
  createdAt     DateTime     @default(now())
}

model Payment {
  id            String       @id @unique @default(cuid())
  method        String
  amount        Int
  createdAt     DateTime     @default(now())
  Transaction   Transaction? @relation(fields: [transactionId], references: [id])
  transactionId Int?
}

enum RoleEnumType {
  staff
  manager
  admin
  superadmin
}
